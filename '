import { redirect, type Actions } from '@sveltejs/kit';
import type { PageServerLoad } from './$types';
import { userProfilesTable } from '$lib/server/schema';
import { db } from '$lib/server/db';
import { eq } from 'drizzle-orm';
import { instanceOf } from 'effect/Match';

export const load: PageServerLoad = async (event) => {
    if (!event.locals.user) redirect(302, '/signin');

    const profile = (
        await db.select().from(userProfilesTable).where(eq(userProfilesTable.userId, event.locals.user.id))
    ).at(0);

    return {
        user: event.locals.user,
        profile,
    };
};

export const actions: Actions = {
    uploadAvatar: async ({ request }) => {
        const formData = await request.formData();
        const avatar = formData.get('avatar') as File;

        if (avatar instanceOf File) {
            const bytes = new Uint8Array(await avatar.arrayBuffer());
        console.info('uploadAvatar', bytes);
        }

    },
    updateProfile: async () => {},
};
